version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.6
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

fetch_data: &fetch_data
  run:
    name: Set script permissions and fetch data
    command: |
      source venv/bin/activate
      chmod +x ./scripts/fetch_dataset.sh ./scripts/credentials.sh

jobs:
  test_bigmart_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Installing Requirements
          command: |
            pwd
            sudo python packages/datacube_bigmart/setup.py install --force
      - *fetch_data
      - run:
          name: Fetching data
          command: |
            ./scripts/fetch_dataset.sh
      - run:
          name: Running Tests for Bigmart Model
          command: |
            py.test -vv packages/datacube_bigmart/tests

  test_ml_api:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Installing Requirements
          command: |
            pip install --no-cache-dir -r packages/ml_api/requirements.txt
      - run:
          name: Running Tests for API
          command: |
            py.test -vv packages/ml_api/tests

  upload_bigmart_model:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/project
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            apk update
            apk add --no-cache py-pip
            pip install awscli
            apk add bash
      - run:
          name: Publish model to AWS ECR
          command: |
            chmod +x ./scripts/pushing_docker_ecr.sh
            docker build -t bigmart_lhl .
            ./scripts/pushing_docker_ecr.sh


workflows:
  version: 2
  test-all:
    jobs:
      - test_bigmart_model
      - test_ml_api
      - upload_bigmart_model
      - test_ml_api:
          requires:
            - upload_bigmart_model
